<?xml version="1.0" encoding="utf-8"?>
<!-- Specials.mxml -->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				
				showCloseButton="false"
				close="titleWindow_close(event);" x="10" y="10" width="946" height="470" creationComplete="init(event);" 
				dropShadowEnabled="true"
				borderAlpha="1.0"
				backgroundImage=""
				layout="horizontal" 
				
				
				xmlns:local="*">
	
	
	
	<mx:HTTPService
			id="RetrieveWildcards" 
			url="data/wildcards.xml"  
			result="{wildcardHandler(event)}" 
			fault="{wildcardFault(event)}"/>
		
		
	
	<mx:Script source="AlertMessageHandler.as"/>
	
	<mx:Script> 
		<![CDATA[
			import com.utilities.Utils;
			
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.CloseEvent;
			import mx.events.FlexMouseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.*;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectProxy;
		
			
			private var arrDP:ArrayCollection = new ArrayCollection;
			
			private function wildcardFault(evt:FaultEvent):void{
			
							var faultMessage:String = "Could not connect with History file checksum for Operators and Wildcards";
					AlertMessageShow(faultMessage);
				
				
				
			}
			private function wildcardHandler(evt:ResultEvent):void{
				
				arrDP = new ArrayCollection
				
				
				
				if (evt.result.wildcards.wildcard == null)
				{
					arrDP=new ArrayCollection()
				}
				else if (evt.result.wildcards.wildcard is ArrayCollection)
				{
					arrDP=evt.result.wildcards.wildcard;
				}
				else if (evt.result.wildcards.wildcard is ObjectProxy)
				{
					arrDP = new ArrayCollection(ArrayUtil.toArray(evt.result.wildcards.wildcard)); 
				}
				
				
				dg_rendition.dataProvider = arrDP;
				  
			}

			
			private function resultStatus(string_result:String, string_reason:String):String{
				var retstr:String = string_reason;
				
				if (string_result == "EXPIRED"){
					retstr = "Session EXPIRED due to inactivity.  Please log out and log back in again to create a new session.";
				} 
				if (string_result == "FAIL"){
					retstr = string_reason;
				} 
				
				return retstr;
			}
			
			private function titleWindow_close(evt:Event):void { 
				PopUpManager.removePopUp(this);
			}
			
			private function init(evt:Event):void {
				RetrieveWildcards.send();
					
			}
			
			
			
		
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%">
			<mx:Button id="img_ezlearnswitch" icon="@Embed('image/scholar_cap_special.png')"            
					   height="27"
					   width="78"
					   useHandCursor="true" buttonMode="true"   
					   mouseChildren="false"
					   click="{parentApplication.scholarcap_mousehovering(event,'','Wildcards','BUTTON')}"
					   
					   />     
			<mx:Spacer width="100%"/> 
			<mx:Label text="Operators / Wildcards" width="100%" textAlign="center"  fontSize="19" color="#364D6A" fontWeight="bold"
					  rollOver="{parentApplication.mbdg_mousehovering(event,event.currentTarget.text,'wildcards','WILDCARDS')}"
					  rollOut="{ parentApplication.mbdg_stopHoverTimer()}"
					  />
			<mx:Spacer width="100%"/>
			<mx:Button label="Close" id="btn_myview_close"  
					   rollOver="{parentApplication.mbdg_mousehovering(event,'',event.currentTarget.label,'BUTTON')}"
					   rollOut="{ parentApplication.mbdg_stopHoverTimer()}" click="{titleWindow_close(event)}"/>
			
		</mx:HBox>
		
		<!-- mx:Label id="txt_current" text="CurrentView" width="100%" textAlign="center"  fontSize="19" color="#030303" fontWeight="bold"
				  rollOver="{parentApplication.mbdg_mousehovering(event,event.currentTarget.text,'Current Rendition','CURRENT RENDITION')}"
				  rollOut="{ parentApplication.mbdg_stopHoverTimer()}"
				  / -->
	
		<mx:DataGrid
			id="dg_rendition"
			width="100%"
			height="100%"
			rowHeight="22"
			dataProvider="{arrDP}"
			
			verticalScrollPolicy="auto"
			
			allowMultipleSelection="false"   
			variableRowHeight="true"
			headerStyleName="centerAlignDataGridCol"
			horizontalGridLines="true"
			verticalGridLines="true"
			horizontalGridLineColor="black"
			verticalGridLineColor="black" borderColor="#010101" borderThickness="1"
			wordWrap="true"
			sortableColumns="false" 
			 
			>
			<mx:columns>
				<mx:DataGridColumn id="wc_symbol" dataField="symbol" headerText="Symbol" width="100" wordWrap="true"  editable="false" textAlign="center" />
				<mx:DataGridColumn id="wc_string" dataField="string" headerText="Alphanumeric Column" width="120" wordWrap="true"  editable="false" textAlign="center"/>
				<mx:DataGridColumn id="wc_numeric" dataField="numeric" headerText="Numeric Column" width="100"  editable="false" wordWrap="true" textAlign="center"/>
				<mx:DataGridColumn id="wc_date" dataField="date" headerText="Date Column" width="100" wordWrap="true"  editable="false" textAlign="center"/>
				<mx:DataGridColumn id="Description" dataField="description" headerText="Description" wordWrap="true"  editable="false" />
				
			</mx:columns>        
		</mx:DataGrid>
		
		
	
	</mx:VBox>
	
	
</mx:TitleWindow>